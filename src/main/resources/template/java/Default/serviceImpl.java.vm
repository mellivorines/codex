#if($moduleName != "")
package ${packageName}.${moduleName}.service.impl;
import ${packageName}.${moduleName}.entity.${ClassName}Entity;
import ${packageName}.${moduleName}.dao.${ClassName}Dao;
import ${packageName}.${moduleName}.service.${ClassName}EntityService;
#else
import ${packageName}.entity.${ClassName}Entity;
import ${packageName}.dao.${ClassName}Dao;
import ${packageName}.service.${ClassName}Service;
#end
import org.springframework.stereotype.Service;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;

import javax.annotation.Resource;

/**
 * ${tableComment}(${tableName})表服务实现类
 *
 * @author ${author} ${email}
 * @since ${version} ${date}
 */
@Service("${ClassName}Service")
public class ${ClassName}ServiceImpl implements ${ClassName}Service {
    @Resource
    private ${ClassName}Dao ${className}Dao;

    /**
     * 通过ID查询单条数据
     *
     * @param id 主键
     * @return 实例对象
     */
    @Override
    public ${ClassName}Entity queryById(Long id) {
        return this.${className}Dao.queryById(id);
    }

    /**
     * 分页查询
     *
     * @param ${className}Entity 筛选条件
     * @param pageRequest      分页对象
     * @return 查询结果
     */
    @Override
    public Page<${ClassName}Entity> queryByPage(${ClassName}Entity ${className}Entity, PageRequest pageRequest) {
        long total = this.${className}Dao.count(${className}Entity);
        return new PageImpl<>(this.${className}Dao.queryAllByLimit(${className}Entity, pageRequest), pageRequest, total);
    }

    /**
     * 新增数据
     *
     * @param ${className}Entity 实例对象
     * @return 实例对象
     */
    @Override
    public ${ClassName}Entity insert(${ClassName}Entity ${className}Entity) {
        this.${className}Dao.insert(${className}Entity);
        return ${className}Entity;
    }

    /**
     * 修改数据
     *
     * @param ${className}Entity 实例对象
     * @return 实例对象
     */
    @Override
    public ${ClassName}Entity update(${ClassName}Entity ${className}Entity) {
        this.${className}Dao.update(${className}Entity);
        return this.queryById(${className}Entity.getId());
    }

    /**
     * 通过主键删除数据
     *
     * @param id 主键
     * @return 是否成功
     */
    @Override
    public boolean deleteById(Long id) {
        return this.${className}Dao.deleteById(id) > 0;
    }
}
