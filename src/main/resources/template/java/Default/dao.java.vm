#if($moduleName != "")
package ${packageName}.${moduleName}.dao;
import ${packageName}.${moduleName}.entity.${ClassName}Entity;
#else
package ${packageName}.dao;
import ${packageName}.entity.${ClassName}Entity;
#end
import org.apache.ibatis.annotations.Param;
import org.springframework.data.domain.Pageable;
import java.util.List;

/**
 * ${tableComment}(${tableName})表数据库访问层
 *
 * @author ${author} ${email}
 * @since ${version} ${date}
 */
public interface  ${ClassName}Dao {

    /**
     * 通过ID查询单条数据
     *
     * @param id 主键
     * @return 实例对象
     */
    ${ClassName}Entity queryById(Long id);

    /**
     * 查询指定行数据
     *
     * @param ${ClassName}Entity 查询条件
     * @param pageable         分页对象
     * @return 对象列表
     */
    List<${ClassName}Entity> queryAllByLimit(${ClassName}Entity ${className}Entity), @Param("pageable") Pageable pageable);

    /**
     * 统计总行数
     *
     * @param ${ClassName}Entity 查询条件
     * @return 总行数
     */
    long count(${ClassName}Entity ${ClassName}Entity));

    /**
     * 新增数据
     *
     * @param ${className}Entity 实例对象
     * @return 影响行数
     */
    int insert(${ClassName}Entity ${ClassName}Entity));

    /**
     * 批量新增数据（MyBatis原生foreach方法）
     *
     * @param entities List<${ClassName}Entity> 实例对象列表
     * @return 影响行数
     */
    int insertBatch(@Param("entities") List<${ClassName}Entity> entities);

    /**
     * 批量新增或按主键更新数据（MyBatis原生foreach方法）
     *
     * @param entities List<${ClassName}Entity> 实例对象列表
     * @return 影响行数
     * @throws org.springframework.jdbc.BadSqlGrammarException 入参是空List的时候会抛SQL语句错误的异常，请自行校验入参
     */
    int insertOrUpdateBatch(@Param("entities") List<${ClassName}Entity> entities);

    /**
     * 修改数据
     *
     * @param ${ClassName}Entity 实例对象
     * @return 影响行数
     */
    int update(${ClassName}Entity ${ClassName}Entity));

    /**
     * 通过主键删除数据
     *
     * @param id 主键
     * @return 影响行数
     */
    int deleteById(Long id);

}
